apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}-server
  labels:
    release: "{{ .Release.Name }}"
    app: "redis-ha"
    name: "redis-server"
    redis-node: "true"
{{ include "labels.standard" . | indent 4 }}
spec:
  serviceName: "redis"
  replicas: {{ .Values.replicas.servers }}
  template:
    metadata:
      labels:
        app: "redis-ha"
        name: "redis-server"
        redis-node: "true"
{{ include "labels.standard" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 10 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 10 }}
      {{- end }}
      containers:
        - name: redis
          image: {{ .Values.redis_image }}
          resources:
{{ toYaml .Values.resources.server | indent 12 }}
          env:
            - name: REDIS_SENTINEL_SERVICE_HOST
              value: "redis-sentinel"
            - name: REDIS_CHART_PREFIX
              value: {{ template "fullname" . }}-
  {{- if .Values.auth }}
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: auth
  {{- end }}
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /redis-master-data
              name: data
      {{- if .Values.persistentVolume.enabled }}
      volumes:
      - name: data
      {{- end }}
  {{- if .Values.persistentVolume.enabled }}
  {{- if not .Values.persistentVolume.existingClaim }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ {{ toYaml .Values.persistentVolume.accessModes }} ]
      resources:
        requests:
          storage: {{ .Values.persistentVolume.size | quote }}
  {{- end }}
  {{- end }}
